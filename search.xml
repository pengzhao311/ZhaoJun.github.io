<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>个人博客部署至Github</title>
    <url>/2024/07/05/Github-Hexo/</url>
    <content><![CDATA[<span id="more"></span>

<h1 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h1><ol>
<li>已经注册<a href="https://github.com/">Github账号</a>；</li>
<li>知晓如何在本地服务器运行个人博客。</li>
</ol>
<h1 id="Github端准备工作"><a href="#Github端准备工作" class="headerlink" title="Github端准备工作"></a>Github端准备工作</h1><p>登录<a href="https://github.com/new">Github新建仓库界面</a>新建一个 Repository name 为 <strong>用户名.github.io</strong> 的仓库用于之后在 Github 上部署个人博客。</p>
<p>找到 my-blog 文件夹下的 _config.yml 文件进行如下修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="comment"># url: http://example.com</span></span><br><span class="line">url: https://用户名.github.io    <span class="comment"># 个人博客在 Github 上部署成功后的网址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  repo: https://github.com/用户名/用户名.github.io    <span class="comment"># 指向 Github 上用于部署个人博客的仓库</span></span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>利用Hexo搭建个人博客</title>
    <url>/2024/07/05/node-js/</url>
    <content><![CDATA[<p>记录如何利用 Hexo 和 Next 主题在 Windows 11 上搭建个人博客。</p>
<span id="more"></span>


<p>在其他开始环节之前</p>
<h1 id="了解-Hexo"><a href="#了解-Hexo" class="headerlink" title="了解 Hexo"></a>了解 Hexo</h1><!-- ## Hexo  -->
<p>Hexo 是一个快速、简洁且高效的博客框架，其使用 Markdown 解析文章，基本在几秒内，即可利用靓丽的主题生成静态网页。其主要功能可归纳如下：</p>
<ol>
<li><strong>生成静态文件</strong>：Hexo 将 Markdown 文件转换成静态的 HTML、CSS 和 JavaScript 文件；</li>
<li><strong>插件和主题</strong>：Hexo 支持各种插件和主题，可以扩展功能和美化博客，其中 <strong>Next</strong> 主题是一款功能比较完善、使用人数较多并且至今仍在维护的主题；</li>
<li><strong>本地服务器</strong>：Hexo 提供一个本地服务器，可以在本地预览生成的网站。</li>
</ol>
<p>又由于 Hexo 是用 JavaScript 编写的，并且依赖于 Node.js 运行时环境。因此，在使用 Hexo 时，你需要首先安装 Node.js，以便能够运行 Hexo 的命令和插件。而Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时环境，主要用于开发服务器端应用，其主要功能包括：</p>
<ol>
<li><strong>运行 JavaScript 代码</strong>：Node.js 允许在服务器端运行 JavaScript 代码，而不仅仅是在浏览器中；</li>
<li><strong>包管理</strong>：Node.js 附带的 npm（Node Package Manager）用于管理和安装各种 JavaScript 库和工具。</li>
</ol>
<p>同利用 miniconda 管理 python 一样，这里使用 Fast Node Manager (fnm) 以管理 Node.js 版本，<a href="https://github.com/Schniz/fnm">fnm 获取地址</a>。</p>
<p>另外在搭建个人博客时，时常需要对项目进行一个版本管理以及托管和部署，而这些功能可以由分布式版本控制系统Git来实现。事实上，Git的要功能包括：</p>
<ol>
<li><strong>版本控制</strong>：Git 可以跟踪文件的更改历史，并允许回滚到以前的版本；</li>
<li><strong>分支管理</strong>：Git 支持创建和合并分支，使得不同的开发任务可以并行进行；</li>
<li><strong>协作开发</strong>：GitHub 等平台基于 Git，提供代码托管和协作开发功能。</li>
</ol>
<p>且值得一提的是<a href="https://learngitbranching.js.org/?demo=&locale=zh_CN">Learn Git Branching</a>是学习 Git 的一个非常好的网站。</p>
<h1 id="安装所需软件并配置对应环境"><a href="#安装所需软件并配置对应环境" class="headerlink" title="安装所需软件并配置对应环境"></a>安装所需软件并配置对应环境</h1><h2 id="下载并安装Git"><a href="#下载并安装Git" class="headerlink" title="下载并安装Git"></a>下载并安装Git</h2><ol>
<li>在<a href="https://git-scm.com/downloads">Git 官网</a> 下载对应版本的 Git ；</li>
<li>在 Windows 11 安装 Git 时只需要跟随 Git 自带的安装引导进行安装即可，除安装路径可以另选择一个合适的安装路径外，其余配置只需保持默认即可。</li>
</ol>
<h2 id="下载并配置-Fast-Node-Manager-fnm"><a href="#下载并配置-Fast-Node-Manager-fnm" class="headerlink" title="下载并配置 Fast Node Manager (fnm)"></a>下载并配置 Fast Node Manager (fnm)</h2><ol>
<li>在 <a href="https://github.com/Schniz/fnm/releases">fnm 的GitHub仓库Release页面</a>选择合适版本的 fnm-windows.zip 下载并解压到 Windows 11 电脑适当安装目录中；</li>
<li>将文件 fnm.exe 所在目录加入环境变量 path 中<br><img src="https://raw.githubusercontent.com/pengzhao311/Blog-images/master/img/fnm-path-a.png" alt="fnm-path-a"></li>
<li>打开 Windows 11 的 PowerShell 输入 <code>fnm -V</code> 命令即可查看所安装的 fnm 的版本，而输入命令 <code>fnm env</code> 显示如下，其可检查之前的配置过程是否生效。<br><img src="https://raw.githubusercontent.com/pengzhao311/Blog-images/master/img/20240711150950.png" alt="20240711150950"></li>
<li>在 Windows 11 的 PowerShell 输入 <code>notepad $profile</code> 命令打开 PowerShell 配置文件 Microsoft.PowerShell_profile.ps1，填入命令 <code>fnm env --use-on-cd | Out-String | Invoke-Expression</code> 并保存。</li>
</ol>
<p>命令解释：</p>
<ol>
<li><code>fnm env --use-on-cd</code> ：用于生成在切换目录时自动使用 .node-version 文件中指定的 Node.js 版本的配置；</li>
<li><code>|</code> ：将前一个命令的输出作为下一个命令的输入，此处(本命令中的第一个<code>|</code>)即表示将 <code>fnm env --use-on-cd</code> 命令的输出传递给 <code>Out-String</code>；</li>
<li><code>Out-String</code> ：PowerShell 命令之一，将接收到的对象转换为字符串；</li>
<li><code>Invoke-Expression</code> ：PowerShell 命令之一，用于执行字符串形式的命令或表达式，此处执行了 <code>fnm env --use-on-cd</code> 生成的配置脚本，从而配置了 fnm 环境。</li>
</ol>
<p>组合命令 <code>fnm env --use-on-cd | Out-String | Invoke-Expression</code> 的整体作用是：</p>
<ol>
<li>生成 fnm 配置脚本，使 fnm 在目录切换时自动使用 .node-version 文件中指定的 Node.js 版本；</li>
<li>将生成的脚本转换为字符串，从而在当前 PowerShell 会话中配置 fnm 环境。</li>
</ol>
<h2 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h2><ol>
<li>可在<a href="https://nodejs.org/zh-cn/download/package-manager">node.js官方网站</a>查看所需安装的 node.js 版本，最好选择 LTS 最新版；</li>
<li>输入命令 <code>fnm install 20.15.1</code> 安装 node.js(注：撰写本博客时 node.js 的 LTS 最新版即为 20.15.1)；</li>
<li>输入命令 <code>node -v</code> 可查看安装好的 node.js 的版本号；</li>
<li>输入命令 <code>fnm use 20.15.1</code> 切换到 20.15.1 版本的 node.js ，之后输入命令 <code>npm -v</code> 查看该 <code>node.js</code> 所附带的 npm 版本号。</li>
</ol>
<p>安装完 fnm 和 node.js 的目录层级结构：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Fast Node Manager</span><br><span class="line">|-- aliases</span><br><span class="line">|   `-- default</span><br><span class="line">|-- fnm.exe</span><br><span class="line">|-- node-versions</span><br><span class="line">|   `-- v20.15.0</span><br><span class="line">`-- tree.md</span><br></pre></td></tr></table></figure>

<h2 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h2><ol>
<li>输入命令 <code>npm install -g hexo-cli</code> 在全局范围内安装 Hexo 命令行工具 Hexo CLI (Hexo Command Line Interface)；</li>
<li>在存储博客项目的目录下输入命令 <code>hexo init my-blog</code> 初始化 Hexo 项目 my-blog ，其将创建一个名为 my-blog 的新目录并生成初始的 Hexo 项目结构，包括默认的配置文件、文件夹和示例内容，同时自动下载并安装 Hexo 的核心库及其默认依赖项。</li>
</ol>
<p>初始化 Hexo 项目后生成的 my-blog 新目录层级结构</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">my-blog</span><br><span class="line">|-- _config.landscape.yml</span><br><span class="line">|-- _config.yml</span><br><span class="line">|-- node_modules</span><br><span class="line">|-- package-lock.json</span><br><span class="line">|-- package.json</span><br><span class="line">|-- scaffolds</span><br><span class="line">|-- <span class="built_in">source</span></span><br><span class="line">|-- themes</span><br><span class="line">`-- tree.md</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>输入命令 <code>npm install</code> 调动 package.json 文件安装该 Hexo 项目所需的插件，以便顺利地开发、构建和部署该 Hexo 博客。</li>
</ol>
<h2 id="获取并配置-Next-主题"><a href="#获取并配置-Next-主题" class="headerlink" title="获取并配置 Next 主题"></a>获取并配置 Next 主题</h2><p>Hexo 的原始主题为 landscape，在<code>npm install</code> 调动 package.json 文件安装完该 Hexo 项目所需的插件后即可在 PowerShell 输入命令 <code>hexo -server</code> 在本地服务器上运行(默认部署位置为 <a href="http://localhost:4000/">http://localhost:4000/</a> )，该主题所有配置均包含在 node_modules&#x2F;hexo-theme-landscape 文件夹中。</p>
<p>my-blog 文件夹下的 _config.yml 文件用于配置网站样式，部分常用设置如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 昭君             <span class="comment"># 网站标题</span></span><br><span class="line">subtitle: <span class="string">&#x27;学杂而不精&#x27;</span>   <span class="comment"># 网站副标题</span></span><br><span class="line">description: <span class="string">&#x27;&#x27;</span>         <span class="comment"># 网站描述</span></span><br><span class="line">keywords:               <span class="comment"># 网站关键词</span></span><br><span class="line">author: 小喵喵           <span class="comment"># 网站所有者昵称</span></span><br><span class="line">language: zh-CN         <span class="comment"># 网站主体语言</span></span><br><span class="line">timezone: <span class="string">&#x27;&#x27;</span>            <span class="comment"># 网站时区设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next             <span class="comment"># 主题设置</span></span><br></pre></td></tr></table></figure>
<p>关于配置网站样式的 _config.yml 文件用法可访问 <a href="https://hexo.io/docs/configuration">Hexo 官网</a>或 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 中文官网</a>做进一步地了解。</p>
<p>由于 landscape 主题过于简陋，因此接下来将在 PowerShell 输入命令 <code>npm install hexo-theme-next@latest</code> 从 <a href="https://github.com/next-theme/hexo-theme-next">Next 主题 Github 仓库</a>获取最新版本的 Next 主题。且同 landscape 主题类似，Next 主题所有配置均包含在 node_modules&#x2F;hexo-theme-next 文件夹中，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo-theme-next</span><br><span class="line">|-- LICENSE.md</span><br><span class="line">|-- README.md</span><br><span class="line">|-- _config.yml</span><br><span class="line">|-- _vendors.yml</span><br><span class="line">|-- docs</span><br><span class="line">|-- languages</span><br><span class="line">|-- layout</span><br><span class="line">|-- package.json</span><br><span class="line">|-- scripts</span><br><span class="line">|-- <span class="built_in">source</span></span><br><span class="line">`-- tree.md</span><br></pre></td></tr></table></figure>
<p>而在 hexo-theme-next 文件夹其中的 _config.yml 文件用于配置网站主题样式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes                  # 选择下方其中一种 Next 主题样式</span></span><br><span class="line"><span class="comment"># scheme: Muse</span></span><br><span class="line"><span class="comment"># scheme: Mist</span></span><br><span class="line"><span class="comment"># scheme: Pisces</span></span><br><span class="line">scheme: Gemini             <span class="comment"># 注意本行命令前必须无空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line">darkmode: <span class="literal">true</span>             <span class="comment"># 选择暗黑主题</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加版权信息</span></span><br><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: <span class="literal">false</span>           <span class="comment"># 首页边栏是否显示</span></span><br><span class="line">  post: <span class="literal">true</span>               <span class="comment"># 文章底部是否显示</span></span><br><span class="line">  language:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 菜单设置</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || home                        <span class="comment"># 首页</span></span><br><span class="line">  about: /about/ || user                 <span class="comment"># 关于</span></span><br><span class="line">  tags: /tags/ || tags                   <span class="comment"># 标签</span></span><br><span class="line">  categories: /categories/ || th         <span class="comment"># 分类</span></span><br><span class="line">  archives: /archives/ || archive        <span class="comment"># 归档</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar      # 日程表</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap      # 站点地图</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat        # 公益404</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 头像设置</span></span><br><span class="line">avatar:</span><br><span class="line">  url: /images/avatar.jpg        <span class="comment"># 头像图片链接</span></span><br><span class="line">  rounded: <span class="literal">true</span>                  <span class="comment"># 设置为椭圆形头像</span></span><br><span class="line">  rotated: <span class="literal">false</span>                 <span class="comment"># 点击头像是否产生旋转特效</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码块一键复制功能</span></span><br><span class="line">  copy_button:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result. </span></span><br><span class="line">    show_result: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 快速返回顶部</span></span><br><span class="line">back2top:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  sidebar: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  scrollpercent: <span class="literal">true</span>       <span class="comment"># 在“返回顶部”按钮中显示滚动百分比</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
</search>
